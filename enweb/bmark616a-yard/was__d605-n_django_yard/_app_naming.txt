
# Naming:


1.

the folder `533-dkrs-djangotemplate` here holds the dkr project.
It needs a unique name as docker compose uses the folder name to name the containers.
A unique name will make using and maintaining the app easier.

2.

You can rename it give your folder a unique name that fits your project.

3.

`_533e-django-example-yard` can be renamed to something like `tags654-yard` - something specific to your project.

Then `533f-dkrs-djangoexample` could be renamed to `tags654b`. This would be a unique and descriptive name. This name would show up in the docker ps listing.


4.

`mangosite` was just the name I used this time. It could be changed to `djangosite/djangoproj`. 
This would require renaming many items in the project files.
You could use `docker-compose run --rm djdev django-admin.py startproject djangoproj .` to create an empty 
one and edit it using the ideas in `mangosite`, or just take the ideas from `djangoproj` and edit `mangoproj`.


5.

The idea behind the yard folder is that it has project code folders and a system data folder.

The entire thing is packaged in the yard folder. 

It makes it clear what files below to this project.

It can be moved to another server.

The project has no files in another place on this server. 

The `sysdata` folder seperates system files from project code files while clearly keeping 
everything in one `yard` folder

.
├── 533f-dkrs-djangoexample
│   ├── adminer-sqlite       <--  a docker project folder
│   ├── docker-compose.yml
│   ├── Makefile 
│   ├── mangosite            <--  a docker project folder for django
│   └── z-example-djangosite
├── _app_naming.txt
├── data
├── README.md
├── __status.txt
├── sysdata             <--  a docker project folder - contains mysql system data files and other system files.
│   ├── mysqldata 

